/*
 * Copyright 2020 Spotify AB
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import React, { FC } from 'react';
import { Typography, Grid } from '@material-ui/core';
import {
  InfoCard,
  Header,
  Page,
  pageTheme,
  Content,
  ContentHeader,
  HeaderLabel,
  SupportButton,
} from '@backstage/core';
import ExampleFetchComponent from '../ExampleFetchComponent';

const Servidor: FC<{}> = () => {

/*
 * //const http = require('http')const fs = require('fs')
 * const path = require('path')
 *
 * //req = requisicao res = resposta que o servidor vai dar
 *
 *   //console.log(req)
 *
 *   //const file = req.url === "/" ? "index.html" : req.url
 *   const file = "/index.html"
 *   const filePath = path.join(__dirname, "public", file)
 *   const extname = path.extname(filePath)
 *
 * //  const allowedFileTypes = ['.html', '.css', '.js']
 *  // const allowed = allowedFileTypes.find(item => item == extname)
 *
 *  // if(!allowed) return
 *
 *    console.log(extname)
 *
 *   fs.readFile(filePath, (err:any, data:any) => {
 *       if (err) throw err;
 *       console.log(data);
 *   })
 *
 */

  return(
  <Page theme={pageTheme.tool}>
    <Header title="Welcome to {{ id }}!" subtitle="Optional subtitle">
      <HeaderLabel label="Owner" value="Team X" />
      <HeaderLabel label="Lifecycle" value="Alpha" />
    </Header>
    <Content>
      <ContentHeader title="Plugin title">
        <SupportButton>A description of your plugin goes here.</SupportButton>
      </ContentHeader>
      <Grid container spacing={3} direction="column">
        <Grid item>
          <InfoCard title="Information card">
            <Typography variant="body1">
              All content should be wrapped in a card like this.
            </Typography>
          </InfoCard>
        </Grid>
        <Grid item>
          <InfoCard title="Example User List (fetching data from randomuser.me)">
            <ExampleFetchComponent />
          </InfoCard>
        </Grid>
      </Grid>
    </Content>
  </Page>
  );
  };

export default Servidor;
